# Copyright 2022 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Author: Paul Scheffler <paulsc@iis.ee.ethz.ch>

name: ci

on:
  push:
    branches: [ master, rc, initial-neo-port ]
  pull_request:
    branches: [ master, rc, initial-neo-port ]
  workflow_dispatch:

jobs:

  check-license:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Python requirements
      run: |
        cd .github
        pip install -r requirements.txt
    - name: Intall license linter
      run: |
        cd .github
        git clone https://github.com/lowRISC/misc-linters.git
    - name: Check license
      run: |
        echo "::add-matcher::.github/license-checker-matcher.json"
        bash -c "set -e; .github/misc-linters/licence-checker/licence-checker.py --config .github/license-checker.hjson"
        echo "::remove-matcher owner=license-checker-matcher::"

  lint-sv:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: chipsalliance/verible-linter-action@main
      with:
        paths: hw
        extra_args: "--waiver_files .github/verible.waiver"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        fail_on_error: true
        reviewdog_reporter: github-check

  lint-cxx:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.14
      with:
        extensions: 'c,h,cpp'
        clangFormatVersion: 14
        style: '{IndentWidth: 4, ColumnLimit: 120, AlignEscapedNewlines: DontAlign}'
        exclude: |
          ./sw/include/cheshire_regs.h
          ./sw/include/i2c_regs.h
          ./sw/include/serial_link_regs.h
          ./sw/include/spi_regs.h
          ./target/sim/src/elfloader.cpp

  build-sw:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: './.github/actions/setup-env'
      - name: Build hardware
        run: make sw-all
      - name: Check whether clean
        run: git status && test -z "$(git status --porcelain)"

  build-hw:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: './.github/actions/setup-env'
      - name: Build hardware
        run: make hw-all
      - name: Check whether clean
        run: git status && test -z "$(git status --porcelain)"

