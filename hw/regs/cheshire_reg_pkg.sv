// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package cheshire_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 6;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    logic [1:0]  d;
  } cheshire_hw2reg_boot_mode_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } cheshire_hw2reg_rtc_freq_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } cheshire_hw2reg_platform_rom_reg_t;

  typedef struct packed {
    struct packed {
      logic        d;
    } bootrom;
    struct packed {
      logic        d;
    } llc;
    struct packed {
      logic        d;
    } uart;
    struct packed {
      logic        d;
    } spi_host;
    struct packed {
      logic        d;
    } i2c;
    struct packed {
      logic        d;
    } gpio;
    struct packed {
      logic        d;
    } dma;
    struct packed {
      logic        d;
    } serial_link;
    struct packed {
      logic        d;
    } vga;
    struct packed {
      logic        d;
    } axirt;
    struct packed {
      logic        d;
    } clic;
    struct packed {
      logic        d;
    } irq_router;
  } cheshire_hw2reg_hw_features_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } cheshire_hw2reg_llc_size_reg_t;

  typedef struct packed {
    struct packed {
      logic [7:0]  d;
    } red_width;
    struct packed {
      logic [7:0]  d;
    } green_width;
    struct packed {
      logic [7:0]  d;
    } blue_width;
  } cheshire_hw2reg_vga_params_reg_t;

  // HW -> register type
  typedef struct packed {
    cheshire_hw2reg_boot_mode_reg_t boot_mode; // [133:132]
    cheshire_hw2reg_rtc_freq_reg_t rtc_freq; // [131:100]
    cheshire_hw2reg_platform_rom_reg_t platform_rom; // [99:68]
    cheshire_hw2reg_hw_features_reg_t hw_features; // [67:56]
    cheshire_hw2reg_llc_size_reg_t llc_size; // [55:24]
    cheshire_hw2reg_vga_params_reg_t vga_params; // [23:0]
  } cheshire_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] CHESHIRE_SCRATCH_0_OFFSET = 6'h 0;
  parameter logic [BlockAw-1:0] CHESHIRE_SCRATCH_1_OFFSET = 6'h 4;
  parameter logic [BlockAw-1:0] CHESHIRE_SCRATCH_2_OFFSET = 6'h 8;
  parameter logic [BlockAw-1:0] CHESHIRE_SCRATCH_3_OFFSET = 6'h c;
  parameter logic [BlockAw-1:0] CHESHIRE_BOOT_MODE_OFFSET = 6'h 10;
  parameter logic [BlockAw-1:0] CHESHIRE_RTC_FREQ_OFFSET = 6'h 14;
  parameter logic [BlockAw-1:0] CHESHIRE_PLATFORM_ROM_OFFSET = 6'h 18;
  parameter logic [BlockAw-1:0] CHESHIRE_HW_FEATURES_OFFSET = 6'h 1c;
  parameter logic [BlockAw-1:0] CHESHIRE_LLC_SIZE_OFFSET = 6'h 20;
  parameter logic [BlockAw-1:0] CHESHIRE_VGA_PARAMS_OFFSET = 6'h 24;

  // Reset values for hwext registers and their fields
  parameter logic [1:0] CHESHIRE_BOOT_MODE_RESVAL = 2'h 0;
  parameter logic [31:0] CHESHIRE_RTC_FREQ_RESVAL = 32'h 0;
  parameter logic [31:0] CHESHIRE_PLATFORM_ROM_RESVAL = 32'h 0;
  parameter logic [11:0] CHESHIRE_HW_FEATURES_RESVAL = 12'h 0;
  parameter logic [31:0] CHESHIRE_LLC_SIZE_RESVAL = 32'h 0;
  parameter logic [23:0] CHESHIRE_VGA_PARAMS_RESVAL = 24'h 0;

  // Register index
  typedef enum int {
    CHESHIRE_SCRATCH_0,
    CHESHIRE_SCRATCH_1,
    CHESHIRE_SCRATCH_2,
    CHESHIRE_SCRATCH_3,
    CHESHIRE_BOOT_MODE,
    CHESHIRE_RTC_FREQ,
    CHESHIRE_PLATFORM_ROM,
    CHESHIRE_HW_FEATURES,
    CHESHIRE_LLC_SIZE,
    CHESHIRE_VGA_PARAMS
  } cheshire_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] CHESHIRE_PERMIT [10] = '{
    4'b 1111, // index[0] CHESHIRE_SCRATCH_0
    4'b 1111, // index[1] CHESHIRE_SCRATCH_1
    4'b 1111, // index[2] CHESHIRE_SCRATCH_2
    4'b 1111, // index[3] CHESHIRE_SCRATCH_3
    4'b 0001, // index[4] CHESHIRE_BOOT_MODE
    4'b 1111, // index[5] CHESHIRE_RTC_FREQ
    4'b 1111, // index[6] CHESHIRE_PLATFORM_ROM
    4'b 0011, // index[7] CHESHIRE_HW_FEATURES
    4'b 1111, // index[8] CHESHIRE_LLC_SIZE
    4'b 0111  // index[9] CHESHIRE_VGA_PARAMS
  };

endpackage

